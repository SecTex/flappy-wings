# https://www.codepedia.org/ama/how-to-configure-nginx-in-production-to-serve-angular-app-and-reverse-proxy-nodejs
# https://github.com/GaryB432/angular-pwa/blob/master/nginx.conf
# https://gitlab.com/lucaapp/web/-/blob/master/services/webapp/nginx.conf

user  nginx;
worker_processes  auto;

pid /var/run/nginx.pid;

events {
    worker_connections  1024;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_header_timeout 10s;
    client_body_timeout 10s;
    client_max_body_size 128k;
    reset_timedout_connection on;
    charset utf-8;
    # server_tokens off;
    
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    types {
        font/ttf                         ttf;
        font/otf                         otf;
    }

    ##
    # Logging Settings
    ##
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##
    # Turns on/off the gzip compression.
    gzip on;
    gzip_disable "msie6";
    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level 5;
    # The minimum size file to compress the files.
    gzip_min_length 1100;
    # Set the buffer size of gzip, 4 32k is good enough for almost everybody.
    gzip_buffers    16 8k;
    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied    any;
    # This directive let you specify which file types should be compressed, in this case plain text, js files, xml and #css.
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # Enables response header of â€œVary: Accept-Encoding
    gzip_vary on;

    server {
        listen 80; 
        root /var/www/flappy-wings;
        index index.html;
        
        location / {
            try_files $uri$args $uri$args/ $uri /index.html;
        }
          
        # This block will catch static file requests, such as images, css, js
        # The ?: prefix is a 'non-capturing' mark, meaning we do not require
        # the pattern to be captured into $1 which should help improve performance
        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            # Some basic cache-control for static files to be sent to the browser
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }
    }
}